// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.10
// source: cmds/cmds.proto

package cmds

import (
	common "github.com/ymz-ncnk/go-client-server-communication-benchmarks/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EchoCmd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProtoData     *common.ProtoData      `protobuf:"bytes,1,opt,name=proto_data,json=protoData,proto3" json:"proto_data,omitempty"` // reference the existing message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoCmd) Reset() {
	*x = EchoCmd{}
	mi := &file_cmds_cmds_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoCmd) ProtoMessage() {}

func (x *EchoCmd) ProtoReflect() protoreflect.Message {
	mi := &file_cmds_cmds_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoCmd.ProtoReflect.Descriptor instead.
func (*EchoCmd) Descriptor() ([]byte, []int) {
	return file_cmds_cmds_proto_rawDescGZIP(), []int{0}
}

func (x *EchoCmd) GetProtoData() *common.ProtoData {
	if x != nil {
		return x.ProtoData
	}
	return nil
}

var File_cmds_cmds_proto protoreflect.FileDescriptor

const file_cmds_cmds_proto_rawDesc = "" +
	"\n" +
	"\x0fcmds/cmds.proto\x12\x04cmds\x1a\n" +
	"data.proto\";\n" +
	"\aEchoCmd\x120\n" +
	"\n" +
	"proto_data\x18\x01 \x01(\v2\x11.common.ProtoDataR\tprotoDataBeZcgithub.com/ymz-ncnk/go-client-server-communication-benchmarks/projects/cmd-stream/tcp_protobuf/cmdsb\x06proto3"

var (
	file_cmds_cmds_proto_rawDescOnce sync.Once
	file_cmds_cmds_proto_rawDescData []byte
)

func file_cmds_cmds_proto_rawDescGZIP() []byte {
	file_cmds_cmds_proto_rawDescOnce.Do(func() {
		file_cmds_cmds_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cmds_cmds_proto_rawDesc), len(file_cmds_cmds_proto_rawDesc)))
	})
	return file_cmds_cmds_proto_rawDescData
}

var file_cmds_cmds_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_cmds_cmds_proto_goTypes = []any{
	(*EchoCmd)(nil),          // 0: cmds.EchoCmd
	(*common.ProtoData)(nil), // 1: common.ProtoData
}
var file_cmds_cmds_proto_depIdxs = []int32{
	1, // 0: cmds.EchoCmd.proto_data:type_name -> common.ProtoData
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cmds_cmds_proto_init() }
func file_cmds_cmds_proto_init() {
	if File_cmds_cmds_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cmds_cmds_proto_rawDesc), len(file_cmds_cmds_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cmds_cmds_proto_goTypes,
		DependencyIndexes: file_cmds_cmds_proto_depIdxs,
		MessageInfos:      file_cmds_cmds_proto_msgTypes,
	}.Build()
	File_cmds_cmds_proto = out.File
	file_cmds_cmds_proto_goTypes = nil
	file_cmds_cmds_proto_depIdxs = nil
}
